(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun Nl9main_x1 () Int)
(declare-fun Nl9main_y1 () Int)
(declare-fun Nl9main_z1 () Int)
(declare-fun Nl9main_x2 () Int)
(declare-fun Nl9main_y2 () Int)
(declare-fun Nl9main_z2 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun Nl9CT1 () Int)
(declare-fun Nl9CT2 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam4n4 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n4 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam6n4 () Int)
(declare-fun lam6n5 () Int)
(declare-fun lam6n6 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n4 () Int)
(declare-fun lam7n5 () Int)
(declare-fun lam7n6 () Int)
(declare-fun undef4 () Int)
(declare-fun undef5 () Int)
(declare-fun undef6 () Int)
(declare-fun main_y () Int)
(declare-fun main_z () Int)
(declare-fun lam11n0 () Int)
(declare-fun lam11n1 () Int)
(declare-fun lam11n2 () Int)
(declare-fun lam11n3 () Int)
(declare-fun lam11n4 () Int)
(declare-fun RFN1_CT () Int)
(declare-fun RFN1_main_x () Int)
(declare-fun RFN1_main_y () Int)
(declare-fun RFN1_main_z () Int)
(declare-fun lam9n0 () Int)
(declare-fun lam9n1 () Int)
(declare-fun lam9n2 () Int)
(declare-fun lam9n3 () Int)
(declare-fun lam9n4 () Int)
(declare-fun lam10n0 () Int)
(declare-fun lam10n1 () Int)
(declare-fun lam10n2 () Int)
(declare-fun lam10n3 () Int)
(declare-fun lam10n4 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n2 () Int)
(declare-fun lam8n3 () Int)
(declare-fun lam8n4 () Int)
(assert ( and ( <= ( - 1 ) Nl9main_x1 ) ( <= Nl9main_x1 1 ) ( <= ( - 1 ) Nl9main_y1 ) ( <= Nl9main_y1 1 ) ( <= ( - 1 ) Nl9main_z1 ) ( <= Nl9main_z1 1 ) ( <= ( - 1 ) Nl9main_x2 ) ( <= Nl9main_x2 1 ) ( <= ( - 1 ) Nl9main_y2 ) ( <= Nl9main_y2 1 ) ( <= ( - 1 ) Nl9main_z2 ) ( <= Nl9main_z2 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * 1 lam0n0 ) ( * 1 lam0n1 ) ( * Nl9CT1 lam0n2 ) ( * Nl9CT2 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * Nl9main_x1 lam0n2 ) ( * Nl9main_x2 lam0n3 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * ( - 1 ) lam0n1 ) ( * Nl9main_y1 lam0n2 ) ( * Nl9main_y2 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl9main_z1 lam0n2 ) ( * Nl9main_z2 lam0n3 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( > ( + ( * 1 lam1n0 ) ( * 1 lam1n1 ) ( * Nl9CT1 lam1n2 ) ( * Nl9CT2 lam1n3 ) ( - 1 ( + ( + Nl9CT1 ( * Nl9main_x1 1 ) ) ( * Nl9main_z1 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * Nl9main_x1 lam1n2 ) ( * Nl9main_x2 lam1n3 ) ( - ( + 0 ( * Nl9main_x1 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * ( - 1 ) lam1n1 ) ( * Nl9main_y1 lam1n2 ) ( * Nl9main_y2 lam1n3 ) ( - ( + 0 Nl9main_y1 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * Nl9main_z1 lam1n2 ) ( * Nl9main_z2 lam1n3 ) ( - ( + 0 ( * Nl9main_z1 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * 1 lam0n0 ) ( * 1 lam0n1 ) ( * Nl9CT1 lam0n2 ) ( * Nl9CT2 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * Nl9main_x1 lam0n2 ) ( * Nl9main_x2 lam0n3 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * ( - 1 ) lam0n1 ) ( * Nl9main_y1 lam0n2 ) ( * Nl9main_y2 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl9main_z1 lam0n2 ) ( * Nl9main_z2 lam0n3 ) ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( > ( + ( * 1 lam2n0 ) ( * 1 lam2n1 ) ( * Nl9CT1 lam2n2 ) ( * Nl9CT2 lam2n3 ) ( - 1 ( + ( + Nl9CT2 ( * Nl9main_x2 1 ) ) ( * Nl9main_z2 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * Nl9main_x1 lam2n2 ) ( * Nl9main_x2 lam2n3 ) ( - ( + 0 ( * Nl9main_x2 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam2n0 ) ( * ( - 1 ) lam2n1 ) ( * Nl9main_y1 lam2n2 ) ( * Nl9main_y2 lam2n3 ) ( - ( + 0 Nl9main_y2 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl9main_z1 lam2n2 ) ( * Nl9main_z2 lam2n3 ) ( - ( + 0 ( * Nl9main_z2 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( >= lam3n4 0 ) ( > ( + ( * 1 lam3n1 ) ( * 1 lam3n2 ) ( * Nl9CT1 lam3n3 ) ( * Nl9CT2 lam3n4 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl9main_x1 lam3n3 ) ( * Nl9main_x2 lam3n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * ( - 1 ) lam3n1 ) ( * ( - 1 ) lam3n2 ) ( * Nl9main_y1 lam3n3 ) ( * Nl9main_y2 lam3n4 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl9main_z1 lam3n3 ) ( * Nl9main_z2 lam3n4 ) ) 0 ) ) ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n3 0 ) ( >= lam4n4 0 ) ( > ( + ( * 1 lam4n1 ) ( * 1 lam4n2 ) ( * Nl9CT1 lam4n3 ) ( * Nl9CT2 lam4n4 ) ( - 1 ( + ( + Nl9CT1 ( * Nl9main_x1 ( - 1 ) ) ) ( * Nl9main_y1 0 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n1 ) ( * Nl9main_x1 lam4n3 ) ( * Nl9main_x2 lam4n4 ) ( - ( + ( + 0 ( * Nl9main_x1 1 ) ) ( * Nl9main_y1 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * ( - 1 ) lam4n1 ) ( * ( - 1 ) lam4n2 ) ( * Nl9main_y1 lam4n3 ) ( * Nl9main_y2 lam4n4 ) ( - ( + 0 ( * Nl9main_y1 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam4n0 ) ( * Nl9main_z1 lam4n3 ) ( * Nl9main_z2 lam4n4 ) ( - ( + 0 Nl9main_z1 ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( >= lam3n4 0 ) ( > ( + ( * 1 lam3n1 ) ( * 1 lam3n2 ) ( * Nl9CT1 lam3n3 ) ( * Nl9CT2 lam3n4 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl9main_x1 lam3n3 ) ( * Nl9main_x2 lam3n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * ( - 1 ) lam3n1 ) ( * ( - 1 ) lam3n2 ) ( * Nl9main_y1 lam3n3 ) ( * Nl9main_y2 lam3n4 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl9main_z1 lam3n3 ) ( * Nl9main_z2 lam3n4 ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( >= lam5n3 0 ) ( >= lam5n4 0 ) ( > ( + ( * 1 lam5n1 ) ( * 1 lam5n2 ) ( * Nl9CT1 lam5n3 ) ( * Nl9CT2 lam5n4 ) ( - 1 ( + ( + Nl9CT2 ( * Nl9main_x2 ( - 1 ) ) ) ( * Nl9main_y2 0 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n1 ) ( * Nl9main_x1 lam5n3 ) ( * Nl9main_x2 lam5n4 ) ( - ( + ( + 0 ( * Nl9main_x2 1 ) ) ( * Nl9main_y2 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n0 ) ( * ( - 1 ) lam5n1 ) ( * ( - 1 ) lam5n2 ) ( * Nl9main_y1 lam5n3 ) ( * Nl9main_y2 lam5n4 ) ( - ( + 0 ( * Nl9main_y2 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam5n0 ) ( * Nl9main_z1 lam5n3 ) ( * Nl9main_z2 lam5n4 ) ( - ( + 0 Nl9main_z2 ) ) ) 0 ) ) ))
(assert ( and ( <= ( + ( - 10000 ) undef4 ) 0 ) ( <= ( + ( - 10000 ) ( * ( - 1 ) undef4 ) ) 0 ) ( <= ( + ( - 10000 ) undef5 ) 0 ) ( <= ( + ( - 10000 ) undef6 ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef5 ) ) 0 ) ( = ( + main_y ( * ( - 1 ) undef5 ) ) 0 ) ( = ( + main_z ( * ( - 1 ) undef6 ) ) 0 ) ( <= ( + ( + Nl9CT1 ( * Nl9main_x1 ( - 1 ) ) ) ( * ( + 0 Nl9main_y1 ) main_y ) ( * ( + 0 Nl9main_z1 ) main_z ) ( * ( + 0 ( * Nl9main_x1 1 ) ) undef4 ) ) 0 ) ( <= ( + ( + Nl9CT2 ( * Nl9main_x2 ( - 1 ) ) ) ( * ( + 0 Nl9main_y2 ) main_y ) ( * ( + 0 Nl9main_z2 ) main_z ) ( * ( + 0 ( * Nl9main_x2 1 ) ) undef4 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) main_y ) ) 0 ) ))
(assert ( or ( and ( and ( >= lam11n0 0 ) ( >= lam11n1 0 ) ( >= lam11n2 0 ) ( >= lam11n3 0 ) ( >= lam11n4 0 ) ( > ( + ( * 1 lam11n1 ) ( * 1 lam11n2 ) ( * Nl9CT1 lam11n3 ) ( * Nl9CT2 lam11n4 ) ( - 1 ( - ( + ( + RFN1_CT ( * RFN1_main_x ( - 1 ) ) ) ( * RFN1_main_y 0 ) ) RFN1_CT ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam11n1 ) ( * Nl9main_x1 lam11n3 ) ( * Nl9main_x2 lam11n4 ) ( - ( - ( + ( + 0 ( * RFN1_main_x 1 ) ) ( * RFN1_main_y 1 ) ) RFN1_main_x ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam11n0 ) ( * ( - 1 ) lam11n1 ) ( * ( - 1 ) lam11n2 ) ( * Nl9main_y1 lam11n3 ) ( * Nl9main_y2 lam11n4 ) ( - ( - ( + 0 ( * RFN1_main_y 1 ) ) RFN1_main_y ) ) ) 0 ) ( = ( + ( * 1 lam11n0 ) ( * Nl9main_z1 lam11n3 ) ( * Nl9main_z2 lam11n4 ) ( - ( - ( + 0 RFN1_main_z ) RFN1_main_z ) ) ) 0 ) ) ( and ( and ( >= lam9n0 0 ) ( >= lam9n1 0 ) ( >= lam9n2 0 ) ( >= lam9n3 0 ) ( >= lam9n4 0 ) ( > ( + ( * 1 lam9n1 ) ( * 1 lam9n2 ) ( * Nl9CT1 lam9n3 ) ( * Nl9CT2 lam9n4 ) ( - 1 ( - RFN1_CT ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam9n1 ) ( * Nl9main_x1 lam9n3 ) ( * Nl9main_x2 lam9n4 ) ( - ( - RFN1_main_x ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam9n0 ) ( * ( - 1 ) lam9n1 ) ( * ( - 1 ) lam9n2 ) ( * Nl9main_y1 lam9n3 ) ( * Nl9main_y2 lam9n4 ) ( - ( - RFN1_main_y ) ) ) 0 ) ( = ( + ( * 1 lam9n0 ) ( * Nl9main_z1 lam9n3 ) ( * Nl9main_z2 lam9n4 ) ( - ( - RFN1_main_z ) ) ) 0 ) ) ( and ( >= lam10n0 0 ) ( >= lam10n1 0 ) ( >= lam10n2 0 ) ( >= lam10n3 0 ) ( >= lam10n4 0 ) ( > ( + ( * 1 lam10n1 ) ( * 1 lam10n2 ) ( * Nl9CT1 lam10n3 ) ( * Nl9CT2 lam10n4 ) ( - 1 ( + ( - ( + ( + RFN1_CT ( * RFN1_main_x ( - 1 ) ) ) ( * RFN1_main_y 0 ) ) RFN1_CT ) 1 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam10n1 ) ( * Nl9main_x1 lam10n3 ) ( * Nl9main_x2 lam10n4 ) ( - ( - ( + ( + 0 ( * RFN1_main_x 1 ) ) ( * RFN1_main_y 1 ) ) RFN1_main_x ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam10n0 ) ( * ( - 1 ) lam10n1 ) ( * ( - 1 ) lam10n2 ) ( * Nl9main_y1 lam10n3 ) ( * Nl9main_y2 lam10n4 ) ( - ( - ( + 0 ( * RFN1_main_y 1 ) ) RFN1_main_y ) ) ) 0 ) ( = ( + ( * 1 lam10n0 ) ( * Nl9main_z1 lam10n3 ) ( * Nl9main_z2 lam10n4 ) ( - ( - ( + 0 RFN1_main_z ) RFN1_main_z ) ) ) 0 ) ) ) ) ( and ( >= lam8n0 0 ) ( >= lam8n1 0 ) ( >= lam8n2 0 ) ( >= lam8n3 0 ) ( >= lam8n4 0 ) ( > ( + ( * 1 lam8n1 ) ( * 1 lam8n2 ) ( * Nl9CT1 lam8n3 ) ( * Nl9CT2 lam8n4 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam8n1 ) ( * Nl9main_x1 lam8n3 ) ( * Nl9main_x2 lam8n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam8n0 ) ( * ( - 1 ) lam8n1 ) ( * ( - 1 ) lam8n2 ) ( * Nl9main_y1 lam8n3 ) ( * Nl9main_y2 lam8n4 ) ) 0 ) ( = ( + ( * 1 lam8n0 ) ( * Nl9main_z1 lam8n3 ) ( * Nl9main_z2 lam8n4 ) ) 0 ) ) ))
(check-sat)
(exit)
