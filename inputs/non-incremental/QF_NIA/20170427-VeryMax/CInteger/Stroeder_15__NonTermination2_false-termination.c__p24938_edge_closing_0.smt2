(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun Nl2main_x1 () Int)
(declare-fun Nl2main_oldx1 () Int)
(declare-fun Nl2main_x2 () Int)
(declare-fun Nl2main_oldx2 () Int)
(declare-fun Nl2main_x3 () Int)
(declare-fun Nl2main_oldx3 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam0n5 () Int)
(declare-fun lam0n6 () Int)
(declare-fun lam0n7 () Int)
(declare-fun lam0n8 () Int)
(declare-fun UndefCntr0_CT () Int)
(declare-fun Nl2CT1 () Int)
(declare-fun Nl2CT2 () Int)
(declare-fun Nl2CT3 () Int)
(declare-fun UndefCntr0_main_x () Int)
(declare-fun UndefCntr0_main_oldx () Int)
(declare-fun UndefCntr0_undef4 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n5 () Int)
(declare-fun lam1n6 () Int)
(declare-fun lam1n7 () Int)
(declare-fun lam1n8 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam2n6 () Int)
(declare-fun lam2n7 () Int)
(declare-fun lam2n8 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam3n5 () Int)
(declare-fun lam3n6 () Int)
(declare-fun lam3n7 () Int)
(declare-fun lam3n8 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam6n0 () Int)
(declare-fun main_x () Int)
(declare-fun undef3 () Int)
(declare-fun main_oldx () Int)
(declare-fun FV_main_x_1 () Int)
(declare-fun FV_main_oldx_1 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n4 () Int)
(declare-fun lam7n5 () Int)
(declare-fun lam7n6 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n2 () Int)
(declare-fun lam8n3 () Int)
(declare-fun lam8n4 () Int)
(declare-fun lam8n5 () Int)
(declare-fun lam8n6 () Int)
(declare-fun UndefDef0undef4_CT () Int)
(declare-fun UndefDef0undef4_main_x () Int)
(declare-fun UndefDef0undef4_main_oldx () Int)
(declare-fun lam9n0 () Int)
(declare-fun lam9n1 () Int)
(declare-fun lam9n2 () Int)
(declare-fun lam9n3 () Int)
(declare-fun lam9n4 () Int)
(declare-fun lam9n5 () Int)
(declare-fun lam9n6 () Int)
(declare-fun lam10n0 () Int)
(declare-fun lam10n1 () Int)
(declare-fun lam10n2 () Int)
(declare-fun lam10n3 () Int)
(declare-fun lam10n4 () Int)
(declare-fun lam10n5 () Int)
(declare-fun lam11n0 () Int)
(declare-fun lam11n1 () Int)
(declare-fun lam11n2 () Int)
(declare-fun lam11n3 () Int)
(declare-fun lam11n4 () Int)
(declare-fun lam11n5 () Int)
(declare-fun FV_main_x_2 () Int)
(declare-fun FV_main_oldx_2 () Int)
(declare-fun FV_undef4_2 () Int)
(assert ( and ( <= ( - 1 ) Nl2main_x1 ) ( <= Nl2main_x1 1 ) ( <= ( - 1 ) Nl2main_oldx1 ) ( <= Nl2main_oldx1 1 ) ( <= ( - 1 ) Nl2main_x2 ) ( <= Nl2main_x2 1 ) ( <= ( - 1 ) Nl2main_oldx2 ) ( <= Nl2main_oldx2 1 ) ( <= ( - 1 ) Nl2main_x3 ) ( <= Nl2main_x3 1 ) ( <= ( - 1 ) Nl2main_oldx3 ) ( <= Nl2main_oldx3 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( >= lam0n5 0 ) ( >= lam0n6 0 ) ( >= lam0n7 0 ) ( >= lam0n8 0 ) ( > ( + ( * 1 lam0n1 ) ( * 2 lam0n2 ) ( * 5 lam0n3 ) ( * 50001 lam0n4 ) ( * UndefCntr0_CT lam0n5 ) ( * Nl2CT1 lam0n6 ) ( * Nl2CT2 lam0n7 ) ( * Nl2CT3 lam0n8 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * 1 lam0n1 ) ( * ( - 1 ) lam0n2 ) ( * ( - 1 ) lam0n3 ) ( * UndefCntr0_main_x lam0n5 ) ( * Nl2main_x1 lam0n6 ) ( * Nl2main_x2 lam0n7 ) ( * Nl2main_x3 lam0n8 ) ) 0 ) ( = ( + ( * 2 lam0n0 ) ( * 1 lam0n3 ) ( * ( - 1 ) lam0n4 ) ( * UndefCntr0_main_oldx lam0n5 ) ( * Nl2main_oldx1 lam0n6 ) ( * Nl2main_oldx2 lam0n7 ) ( * Nl2main_oldx3 lam0n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * UndefCntr0_undef4 lam0n5 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( >= lam1n4 0 ) ( >= lam1n5 0 ) ( >= lam1n6 0 ) ( >= lam1n7 0 ) ( >= lam1n8 0 ) ( > ( + ( * 1 lam1n1 ) ( * 2 lam1n2 ) ( * 5 lam1n3 ) ( * 50001 lam1n4 ) ( * UndefCntr0_CT lam1n5 ) ( * Nl2CT1 lam1n6 ) ( * Nl2CT2 lam1n7 ) ( * Nl2CT3 lam1n8 ) ( - 1 ( + ( + Nl2CT1 ( * Nl2main_x1 0 ) ) ( * Nl2main_oldx1 0 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * 1 lam1n1 ) ( * ( - 1 ) lam1n2 ) ( * ( - 1 ) lam1n3 ) ( * UndefCntr0_main_x lam1n5 ) ( * Nl2main_x1 lam1n6 ) ( * Nl2main_x2 lam1n7 ) ( * Nl2main_x3 lam1n8 ) ( - ( + 0 ( * Nl2main_oldx1 1 ) ) ) ) 0 ) ( = ( + ( * 2 lam1n0 ) ( * 1 lam1n3 ) ( * ( - 1 ) lam1n4 ) ( * UndefCntr0_main_oldx lam1n5 ) ( * Nl2main_oldx1 lam1n6 ) ( * Nl2main_oldx2 lam1n7 ) ( * Nl2main_oldx3 lam1n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * UndefCntr0_undef4 lam1n5 ) ( - ( + 0 ( * Nl2main_x1 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( >= lam0n5 0 ) ( >= lam0n6 0 ) ( >= lam0n7 0 ) ( >= lam0n8 0 ) ( > ( + ( * 1 lam0n1 ) ( * 2 lam0n2 ) ( * 5 lam0n3 ) ( * 50001 lam0n4 ) ( * UndefCntr0_CT lam0n5 ) ( * Nl2CT1 lam0n6 ) ( * Nl2CT2 lam0n7 ) ( * Nl2CT3 lam0n8 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * 1 lam0n1 ) ( * ( - 1 ) lam0n2 ) ( * ( - 1 ) lam0n3 ) ( * UndefCntr0_main_x lam0n5 ) ( * Nl2main_x1 lam0n6 ) ( * Nl2main_x2 lam0n7 ) ( * Nl2main_x3 lam0n8 ) ) 0 ) ( = ( + ( * 2 lam0n0 ) ( * 1 lam0n3 ) ( * ( - 1 ) lam0n4 ) ( * UndefCntr0_main_oldx lam0n5 ) ( * Nl2main_oldx1 lam0n6 ) ( * Nl2main_oldx2 lam0n7 ) ( * Nl2main_oldx3 lam0n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * UndefCntr0_undef4 lam0n5 ) ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( >= lam2n4 0 ) ( >= lam2n5 0 ) ( >= lam2n6 0 ) ( >= lam2n7 0 ) ( >= lam2n8 0 ) ( > ( + ( * 1 lam2n1 ) ( * 2 lam2n2 ) ( * 5 lam2n3 ) ( * 50001 lam2n4 ) ( * UndefCntr0_CT lam2n5 ) ( * Nl2CT1 lam2n6 ) ( * Nl2CT2 lam2n7 ) ( * Nl2CT3 lam2n8 ) ( - 1 ( + ( + Nl2CT2 ( * Nl2main_x2 0 ) ) ( * Nl2main_oldx2 0 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * 1 lam2n1 ) ( * ( - 1 ) lam2n2 ) ( * ( - 1 ) lam2n3 ) ( * UndefCntr0_main_x lam2n5 ) ( * Nl2main_x1 lam2n6 ) ( * Nl2main_x2 lam2n7 ) ( * Nl2main_x3 lam2n8 ) ( - ( + 0 ( * Nl2main_oldx2 1 ) ) ) ) 0 ) ( = ( + ( * 2 lam2n0 ) ( * 1 lam2n3 ) ( * ( - 1 ) lam2n4 ) ( * UndefCntr0_main_oldx lam2n5 ) ( * Nl2main_oldx1 lam2n6 ) ( * Nl2main_oldx2 lam2n7 ) ( * Nl2main_oldx3 lam2n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n1 ) ( * UndefCntr0_undef4 lam2n5 ) ( - ( + 0 ( * Nl2main_x2 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( >= lam0n5 0 ) ( >= lam0n6 0 ) ( >= lam0n7 0 ) ( >= lam0n8 0 ) ( > ( + ( * 1 lam0n1 ) ( * 2 lam0n2 ) ( * 5 lam0n3 ) ( * 50001 lam0n4 ) ( * UndefCntr0_CT lam0n5 ) ( * Nl2CT1 lam0n6 ) ( * Nl2CT2 lam0n7 ) ( * Nl2CT3 lam0n8 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * 1 lam0n1 ) ( * ( - 1 ) lam0n2 ) ( * ( - 1 ) lam0n3 ) ( * UndefCntr0_main_x lam0n5 ) ( * Nl2main_x1 lam0n6 ) ( * Nl2main_x2 lam0n7 ) ( * Nl2main_x3 lam0n8 ) ) 0 ) ( = ( + ( * 2 lam0n0 ) ( * 1 lam0n3 ) ( * ( - 1 ) lam0n4 ) ( * UndefCntr0_main_oldx lam0n5 ) ( * Nl2main_oldx1 lam0n6 ) ( * Nl2main_oldx2 lam0n7 ) ( * Nl2main_oldx3 lam0n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * UndefCntr0_undef4 lam0n5 ) ) 0 ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( >= lam3n4 0 ) ( >= lam3n5 0 ) ( >= lam3n6 0 ) ( >= lam3n7 0 ) ( >= lam3n8 0 ) ( > ( + ( * 1 lam3n1 ) ( * 2 lam3n2 ) ( * 5 lam3n3 ) ( * 50001 lam3n4 ) ( * UndefCntr0_CT lam3n5 ) ( * Nl2CT1 lam3n6 ) ( * Nl2CT2 lam3n7 ) ( * Nl2CT3 lam3n8 ) ( - 1 ( + ( + Nl2CT3 ( * Nl2main_x3 0 ) ) ( * Nl2main_oldx3 0 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * 1 lam3n1 ) ( * ( - 1 ) lam3n2 ) ( * ( - 1 ) lam3n3 ) ( * UndefCntr0_main_x lam3n5 ) ( * Nl2main_x1 lam3n6 ) ( * Nl2main_x2 lam3n7 ) ( * Nl2main_x3 lam3n8 ) ( - ( + 0 ( * Nl2main_oldx3 1 ) ) ) ) 0 ) ( = ( + ( * 2 lam3n0 ) ( * 1 lam3n3 ) ( * ( - 1 ) lam3n4 ) ( * UndefCntr0_main_oldx lam3n5 ) ( * Nl2main_oldx1 lam3n6 ) ( * Nl2main_oldx2 lam3n7 ) ( * Nl2main_oldx3 lam3n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * UndefCntr0_undef4 lam3n5 ) ( - ( + 0 ( * Nl2main_x3 1 ) ) ) ) 0 ) ) ))
(assert ( and ( <= ( + Nl2CT1 ( * Nl2main_x1 FV_main_x_1 ) ( * Nl2main_oldx1 FV_main_oldx_1 ) ) 0 ) ( <= ( + Nl2CT2 ( * Nl2main_x2 FV_main_x_1 ) ( * Nl2main_oldx2 FV_main_oldx_1 ) ) 0 ) ( <= ( + Nl2CT3 ( * Nl2main_x3 FV_main_x_1 ) ( * Nl2main_oldx3 FV_main_oldx_1 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) FV_main_x_1 ) FV_main_oldx_1 ) 0 ) ))
(assert ( or ( not ( = UndefCntr0_main_x 0 ) ) ( not ( = UndefCntr0_main_oldx 0 ) ) ( not ( = UndefCntr0_undef4 0 ) ) ( = UndefCntr0_CT 0 ) ))
(assert ( or ( and ( = UndefCntr0_main_x 0 ) ( = UndefCntr0_main_oldx 0 ) ) ( not ( = UndefCntr0_undef4 0 ) ) ))
(assert ( or ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( >= lam7n3 0 ) ( >= lam7n4 0 ) ( >= lam7n5 0 ) ( >= lam7n6 0 ) ( > ( + ( * 2 lam7n1 ) ( * 5 lam7n2 ) ( * 50001 lam7n3 ) ( * Nl2CT1 lam7n4 ) ( * Nl2CT2 lam7n5 ) ( * Nl2CT3 lam7n6 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * ( - 1 ) lam7n1 ) ( * ( - 1 ) lam7n2 ) ( * Nl2main_x1 lam7n4 ) ( * Nl2main_x2 lam7n5 ) ( * Nl2main_x3 lam7n6 ) ) 0 ) ( = ( + ( * 2 lam7n0 ) ( * 1 lam7n2 ) ( * ( - 1 ) lam7n3 ) ( * Nl2main_oldx1 lam7n4 ) ( * Nl2main_oldx2 lam7n5 ) ( * Nl2main_oldx3 lam7n6 ) ) 0 ) ) ( and ( and ( >= lam8n0 0 ) ( >= lam8n1 0 ) ( >= lam8n2 0 ) ( >= lam8n3 0 ) ( >= lam8n4 0 ) ( >= lam8n5 0 ) ( >= lam8n6 0 ) ( > ( + ( * 2 lam8n1 ) ( * 5 lam8n2 ) ( * 50001 lam8n3 ) ( * Nl2CT1 lam8n4 ) ( * Nl2CT2 lam8n5 ) ( * Nl2CT3 lam8n6 ) ( - 1 ( + ( + 1 0 ) ( * ( - 1 ) UndefDef0undef4_CT ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam8n0 ) ( * ( - 1 ) lam8n1 ) ( * ( - 1 ) lam8n2 ) ( * Nl2main_x1 lam8n4 ) ( * Nl2main_x2 lam8n5 ) ( * Nl2main_x3 lam8n6 ) ( - ( + 1 ( * UndefDef0undef4_main_x ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * 2 lam8n0 ) ( * 1 lam8n2 ) ( * ( - 1 ) lam8n3 ) ( * Nl2main_oldx1 lam8n4 ) ( * Nl2main_oldx2 lam8n5 ) ( * Nl2main_oldx3 lam8n6 ) ( - ( * UndefDef0undef4_main_oldx ( - 1 ) ) ) ) 0 ) ) ( or ( = UndefCntr0_undef4 0 ) ( and ( >= lam9n0 0 ) ( >= lam9n1 0 ) ( >= lam9n2 0 ) ( >= lam9n3 0 ) ( >= lam9n4 0 ) ( >= lam9n5 0 ) ( >= lam9n6 0 ) ( > ( + ( * 2 lam9n1 ) ( * 5 lam9n2 ) ( * 50001 lam9n3 ) ( * Nl2CT1 lam9n4 ) ( * Nl2CT2 lam9n5 ) ( * Nl2CT3 lam9n6 ) ( - 1 ( + ( + ( + UndefCntr0_CT 0 ) 0 ) ( * UndefCntr0_undef4 UndefDef0undef4_CT ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam9n0 ) ( * ( - 1 ) lam9n1 ) ( * ( - 1 ) lam9n2 ) ( * Nl2main_x1 lam9n4 ) ( * Nl2main_x2 lam9n5 ) ( * Nl2main_x3 lam9n6 ) ( - ( + UndefCntr0_main_x ( * UndefDef0undef4_main_x UndefCntr0_undef4 ) ) ) ) 0 ) ( = ( + ( * 2 lam9n0 ) ( * 1 lam9n2 ) ( * ( - 1 ) lam9n3 ) ( * Nl2main_oldx1 lam9n4 ) ( * Nl2main_oldx2 lam9n5 ) ( * Nl2main_oldx3 lam9n6 ) ( - ( + UndefCntr0_main_oldx ( * UndefDef0undef4_main_oldx UndefCntr0_undef4 ) ) ) ) 0 ) ) ) ) ))
(assert ( or ( and ( >= lam10n0 0 ) ( >= lam10n1 0 ) ( >= lam10n2 0 ) ( >= lam10n3 0 ) ( >= lam10n4 0 ) ( >= lam10n5 0 ) ( > ( + ( * 1 lam10n1 ) ( * ( - 50000 ) lam10n2 ) ( * Nl2CT1 lam10n3 ) ( * Nl2CT2 lam10n4 ) ( * Nl2CT3 lam10n5 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam10n0 ) ( * ( - 1 ) lam10n1 ) ( * Nl2main_x1 lam10n3 ) ( * Nl2main_x2 lam10n4 ) ( * Nl2main_x3 lam10n5 ) ) 0 ) ( = ( + ( * 2 lam10n0 ) ( * 1 lam10n1 ) ( * 1 lam10n2 ) ( * Nl2main_oldx1 lam10n3 ) ( * Nl2main_oldx2 lam10n4 ) ( * Nl2main_oldx3 lam10n5 ) ) 0 ) ) ( and ( >= lam11n0 0 ) ( >= lam11n1 0 ) ( >= lam11n2 0 ) ( >= lam11n3 0 ) ( >= lam11n4 0 ) ( >= lam11n5 0 ) ( > ( + ( * 1 lam11n0 ) ( * 1 lam11n1 ) ( * 2 lam11n2 ) ( * Nl2CT1 lam11n3 ) ( * Nl2CT2 lam11n4 ) ( * Nl2CT3 lam11n5 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam11n0 ) ( * ( - 1 ) lam11n1 ) ( * ( - 1 ) lam11n2 ) ( * Nl2main_x1 lam11n3 ) ( * Nl2main_x2 lam11n4 ) ( * Nl2main_x3 lam11n5 ) ) 0 ) ( = ( + ( * ( - 2 ) lam11n0 ) ( * 1 lam11n1 ) ( * Nl2main_oldx1 lam11n3 ) ( * Nl2main_oldx2 lam11n4 ) ( * Nl2main_oldx3 lam11n5 ) ) 0 ) ) ))
(assert ( and ( and ( <= ( + Nl2CT1 ( * Nl2main_x1 FV_main_x_2 ) ( * Nl2main_oldx1 FV_main_oldx_2 ) ) 0 ) ( <= ( + Nl2CT2 ( * Nl2main_x2 FV_main_x_2 ) ( * Nl2main_oldx2 FV_main_oldx_2 ) ) 0 ) ( <= ( + Nl2CT3 ( * Nl2main_x3 FV_main_x_2 ) ( * Nl2main_oldx3 FV_main_oldx_2 ) ) 0 ) ) ( and ( <= ( + ( * ( - 1 ) FV_main_x_2 ) ( * 2 FV_main_oldx_2 ) ) 0 ) ( <= ( + 1 FV_main_x_2 ( * ( - 1 ) FV_undef4_2 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) FV_main_x_2 ) ) 0 ) ( <= ( + 5 ( * ( - 1 ) FV_main_x_2 ) FV_main_oldx_2 ) 0 ) ( <= ( + 50001 ( * ( - 1 ) FV_main_oldx_2 ) ) 0 ) ) ))
(check-sat)
(exit)
